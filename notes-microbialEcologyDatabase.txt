##################
# source of data #
##################

the bulk of it originated from the environmental collection of the Genbank release 174 (19 Oct 2009; downloaded on 18 Nov 2009).

####
if it is true that there is no one database or review that compiles all the information/data that we have accumulated about microbial distributions in the biosphere, then the microbial biosphere portal is in order.

- partner with, Google? for visualization. ASM, for connectivity?
- similar to camera, but based only on a few markers? for ecosystems other than marine.

######################
# reference database #
######################

built from RDP sequences (release 10; version...; accessed Nov 19, 2009) above 1200 nt and only good quality sequences
using the Nomenclatural system of classification (NOT the NCBI) for cultured organisms

two approaches to classifying:
- use the rdp classifier version 2.01, which is trained according to the accepted nomenclature
- use a top BLAST hit approach, building the database from from RDP data (which incorporates the classification scheme above), but forcing genus assignments for cultured organisms even if their classification is pending.

the second approach may instead be used for defining a new training set that builds upon the one already used, so that culture organisms may also be identified.

their training data set was released on May 2008;

cultured organism
	* 1622 Archaea
	* 95403 Bacteria
for uncultured groups, all sequences down to unclassified family members (so that at least family information is available), including 'incertae sedis'
uncultured groups (289; Bacteria)
	* 49 BRC1
	* 59 OP11
	* 91 WS3
	* 2 SR1
	* 88 OD1

# taxonomy #

start by using the taxonomy tree used by the classifier, as provided in the 'bergeyTrainingTree.xml'; modify later to allow for newly cultivated genera

parsing difficulties
'Bacillus x' appears as genera, child of Bacillus
Firmicutes often include taxa with "", and also subfamilies.
Incertae Sedis XIII


isolation_source,note,organism,host

key words;
isolation_source,
host,
note
unless they contain a match to 'unidentified' or 'uncultured'

############################################
# implementing and populating the database #
############################################

name: microbial_ecology
table prefix: microbecol_
tables:
    * publications
	-pubindex [locally assigned index/id]
	-pubid [pubmed]
	-type [published (pub)/unpublished (unp)]
	-year
	-title
	-reference [all citation information other than authors and title]
	-authors
	-abstract [column added just in case, though it may never be populated]		-keywords
	-technique [technique used for characterizing the community]
	-datasets [number of datasets generated by the study, if the data was obtained from different environments or segregated into separate samples; originally set to 1, but expected to change upon manual curation]

    * datasets
	-pubindex [cross-reference to publication table]
	-dataset [dataset index from the corresponding publication]
	-datatype [16S clone library|metagenomic]
	-curation [non/curated]
	-type [host-associated|terrestrial|aquatic|subsurface|biofilm|unknown; may contain more than one, separated by commas]
	-status [pristine|polluted|artificial]
	-biome [refer to wilkinson's definitions]
	-temperature
	-salinity
	-pH
	-redox
	-community [the abreviated taxon listing]

    * sequences # separate since it won't be accessed on every query
	-pubindex [cross-reference to publication table]
	-dataset [cross-reference to datasets table]
	-accessions [list of sequence accessions/ids, separated by commas]
	-numseqs [total number of sequences, for ease of retrieval if set as a condition]

# creation commands
CREATE DATABASE microbial_ecology CHARACTER SET 'utf8';

CREATE TABLE publications (pubindex INT(6) AUTO_INCREMENT KEY,pubid VARCHAR(10) NOT NULL DEFAULT 'n',type CHAR(3) NOT NULL DEFAULT 'pub',year YEAR(4) NOT NULL,title VARCHAR(300) NOT NULL DEFAULT '0000',reference VARCHAR(220) NOT NULL DEFAULT 'n',authors VARCHAR(500) NOT NULL DEFAULT 'n',abstract VARCHAR(1000),keywords VARCHAR(100),technique VARCHAR(50) NOT NULL DEFAULT 'n',datasets INT(2) NOT NULL DEFAULT '1',contributor VARCHAR(15),date_mod TIMESTAMP);

CREATE TABLE datasets (pubindex INT(6) KEY, dataset INT(2) NOT NULL DEFAULT '1',datatype VARCHAR(25) NOT NULL DEFAULT 'n',curation BOOLEAN NOT NULL DEFAULT '0',type SET('host-associated','terrestrial','aquatic','biofilm','subsurface','unknown') NOT NULL DEFAULT 'unknown',status SET('pristine','polluted','artificial','unknown') NOT NULL DEFAULT 'unknown',biome VARCHAR(50) NOT NULL DEFAULT 'n',temperature INT(3),salinity INT(3),pH INT(3),redox SET('anoxic','anaerobic','oxic','anoxic','microaerophilic','unknown'),community VARCHAR(2500) NOT NULL DEFAULT 'n');

CREATE TABLE sequences (pubindex INT(6) KEY, dataset INT(2) NOT NULL DEFAULT '1',accessions VARCHAR(50000),numseqs INT(3));

GRANT SELECT ON microbial_ecology.* TO 'microecologist'@'localhost' IDENTIFIED BY 'READONLY';

SELECT p.pubid,p.type,p.year,p.title,p.reference,p.authors,d.community,d.numseqs FROM publications p INNER JOIN datasets d USING (pubindex) ORDER BY p.year DESC, p.authors;

SELECT p.pubid,p.type,p.year,p.title,p.reference,p.authors,d.community,d.numseqs FROM publications p INNER JOIN datasets d USING (pubindex) WHERE p.title REGEXP '.*(thermal|marine).*' ORDER BY p.year DESC, p.authors;

### session and request tables ###
CREATE TABLE sessions (sid CHAR(32) KEY,perpage TINYINT UNSIGNED NOT NULL DEFAULT '20',result_count SMALLINT UNSIGNED NOT NULL DEFAULT '0',keywords VARCHAR(250) NOT NULL DEFAULT 'all')

# request should be implemented simple with a 'referer' and timestamp columns, for usage purposes; implement once released.

GRANT SELECT,UPDATE,INSERT,DELETE ON microbial_ecology.sessions TO 'microecologist'@'localhost' IDENTIFIED BY 'READONLY';


More general query structure, with pagination:

SELECT * FROM * ... WHERE ... ORDER BY ... LIMIT {X} OFFSET {Y};
or
........... LIMIT {Y},{X};

the limit parameter instructs the number of results to return, while the offset indicates the result number to start returning (i.e., to obtain 50 results starting on 101, use LIMIT 50 OFFSET 100).


SELECT SQL_CALC_FOUND_ROWS p.pubid,p.type,p.year,p.title,p.reference,p.authors,d.community,d.numseqs FROM publications p INNER JOIN datasets d USING (pubindex) WHERE p.title REGEXP '.*(thermal|marine).*' ORDER BY p.year DESC, p.authors LIMIT 50 OFFSET 0;

is paginate sending new parameters with the cgi that the subsequent pages can retrieve?


save for later:
   <TMPL_LOOP NAME="PUBLOOP">

    <div class="citation">
      <TMPL_VAR NAME="authors"><br />
      <TMPL_VAR NAME="title"><br />
      <TMPL_VAR NAME="reference"><TMPL_IF NAME="pubid"><a href="http://www\
.ncbi.nlm.nih.gov/sites/entrez?db=pubmed&cmd=search&term=<TMPL_VAR NAME="p\
ubid">">[abstract]</a></TMPL_IF><br />
    </div>

    <div class="taxonomy">

    </div>

    </TMPL_LOOP>


##################################################################
# good resource for learning about trees in computer programming #
##################################################################

http://www.foo.be/docs/tpj/issues/vol5_2/tpj0502-0004.html

#####################################################
# potentially useful for display of taxonomic trees #
#####################################################

SEE ALSO
http://www.treeview.net/tv/instructions.asp
###
http://www.dynamicdrive.com/dynamicindex1/navigate1.htm

<script type="text/javascript" src="simpletreemenu.js">

/***********************************************
* Simple Tree Menu- © Dynamic Drive DHTML code library (www.dynamicdrive.com)
* This notice MUST stay intact for legal use
* Visit Dynamic Drive at http://www.dynamicdrive.com/ for full source code
***********************************************/

</script>

<link rel="stylesheet" type="text/css" href="simpletree.css" />




<h4>Simple Tree Menu #1 (persist enabled):</h4>

<a href="javascript:ddtreemenu.flatten('treemenu1', 'expand')">Expand All</a> | <a href="javascript:ddtreemenu.flatten('treemenu1', 'contact')">Contact All</a>

<ul id="treemenu1" class="treeview">
<li>Item 1</li>
<li>Item 2</li>

<li>Folder 1
	<ul>
	<li>Sub Item 1.1</li>
	<li>Sub Item 1.2</li>
	</ul>
</li>
<li>Item 3</li>

<li>Folder 2
	<ul>
	<li>Sub Item 2.1</li>
	<li>Folder 2.1
		<ul>
		<li>Sub Item 2.1.1</li>
		<li>Sub Item 2.1.2</li>
		</ul>
	</li>
</ul>
</li>

<li>Item 4</li>
</ul>

<h4>Simple Tree Menu #2 (Folder 1.1 open by default):</h4>

<a href="javascript:ddtreemenu.flatten('treemenu2', 'expand')">Expand All</a> | <a href="javascript:ddtreemenu.flatten('treemenu2', 'contact')">Contact All</a>

<ul id="treemenu2" class="treeview">
<li>Item 1</li>

<li>Folder 1
	<ul>
	<li>Sub Item 1.1</li>
	<li>Folder 1.1
		<ul rel="open">
		<li>Sub Item 1.1.1</li>
		<li>Sub Item 1.1.2</li>
		<li>Folder 1.1.1
			<ul>
			<li>Sub item 1.1.1.1</li>
			<li>Sub item 1.1.1.2</li>
			<li>Sub item 1.1.1.3</li>
			<li>Sub item 1.1.1.4</li>
			</ul>
		</li>
		</ul>
	</li>
    </ul>
</li>

<li>Item 2</li>
</ul>

<script type="text/javascript">

//ddtreemenu.createTree(treeid, enablepersist, opt_persist_in_days (default is 1))

ddtreemenu.createTree("treemenu1", true)
ddtreemenu.createTree("treemenu2", false)

</script>
